# potential integrations

## broadcast channel service worker pub/sub?
https://developer.chrome.com/blog/broadcastchannel/

## mariadb relevant info
```
% /opt/homebrew/opt/mariadb/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql --port 3366
% mysql -u root -p -h localhost -P 3366 --protocol tcp
% # at this point you can also access the db via a GUI
% # to kill the above instance:
% pkill -f mariadb
```

## full info
```
% brew install mariadb
% brew services run mariadb
% sudo mysql -u root # IMPORTANT: first login must be done through sudo
% GRANT ALL PRIVILEGES on *.* to 'root'@'localhost' IDENTIFIED BY '<PASSWORD>'; # replace <PASSWORD> with desired mysql root password
% FLUSH PRIVILEGES;
% exit
% sudo service mysql restart # good to go

% # recommended to launch mariadb on another part to avoid namespace conflicts when working on this architecture
% /opt/homebrew/opt/mariadb/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql --port 3366
% mysql -u root -p -h localhost -P 3366 --protocol tcp
% # at this point you can also access the db via a GUI
% # to kill the above instance:
% pkill -f mariadb

# extra info
% brew services --help 
% brew services list
% brew services info mariadb
% brew services run mariadb
% brew services info mariadb 
% brew services stop mariadb
% brew services list

# check which ports are being used
% nmap -p 1-65535 --open localhost
% sudo lsof -P -i -n -sTCP:LISTEN

# BACK UP
% /opt/homebrew/opt/mariadb/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql --port 3366
% mysql -u root -p -h localhost -P 3366 --protocol tcp
# # Dump a single db
% mysqldump --user=admin_backup --password --lock-tables --databases db1 > /data/backup/db1.sql
# # Dump ALL dbs
% mysqldump --user=admin_backup --password --lock-tables --all-databases > /data/backup/dbs.sql

# enable binary logs
# # start server with the following
 % /opt/homebrew/opt/mariadb/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql --port 3366 --log-bin